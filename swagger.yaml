
openapi: 3.0.1

info:
  title: "SponsoredProducts S2S API"
  description: "API for server to server integration"
  version: 1.0.0

servers:
  - url: https://portals.smartplacement.io
    variables: {}

security:
  - bearerAuth: []

paths:
  "/s2s/portals/{portalId}/advertisers":
    post:
      summary: "Create a new advertiser"
      description: "This endpoint allows you to create a new advertiser within a specific portal. The `portalId` must be provided in the path."
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the portal where the advertiser will be created."
      requestBody:
        description: "JSON object containing the advertiser details."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAdvertisersBody"
      responses:
        "201":
          description: "Advertiser created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Advertiser"
        "400":
          description: "Invalid Timezone or SignedAt date"
        "403":
          description: "Access forbidden"
        "404":
          description: "Portal not found"
        "401":
          description: "Authentication required"

  "/s2s/portals/{portalId}/advertisers/{advertiserId}:registerOrdServiceAgreement":
    post:
      summary: "Register an ORD service agreement"
      description: "Use this endpoint to register an ORD service agreement for a specific advertiser in a given portal. Both `portalId` and `advertiserId` are required."
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the portal where the service agreement is being registered."
        - name: advertiserId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the advertiser registering the service agreement."
      requestBody:
        description: "JSON object containing service agreement details."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRegisterOrdServiceAgreementBody"
      responses:
        "200":
          description: "Service agreement registered successfully"
        "400":
          description: "Invalid request data"
        "403":
          description: "Access forbidden"
        "404":
          description: "Advertiser or portal not found"
        "409":
          description: "Service agreement already exists"
        "401":
          description: "Authentication required"

  "/s2s/portals/{portalId}/incomeTransactions":
    post:
      summary: "Create a new income transaction"
      description: "This endpoint is used to create a new income transaction for a specified portal. The `portalId` is required in the path."
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the portal where the transaction will be recorded."
      requestBody:
        description: "JSON object with transaction details."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostIncomeTransactionsBody"
      responses:
        "201":
          description: "Income transaction created successfully"
        "400":
          description: "Amount is 0"
        "403":
          description: "Access forbidden"
        "404":
          description: "Portal or Advertiser not found"
        "409":
          description: "Transaction conflict"
        "401":
          description: "Authentication required"
    get:
      summary: "Retrieve income transactions"
      description: "Fetches a list of income transactions for a specific portal. You can filter results by date range and pagination."
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the portal to fetch transactions for."
        - name: from
          in: query
          schema:
            type: string
            format: date-time
          description: "Fetches a list of income transactions for a specific portal. You can filter results by date range and pagination."
        - name: to
          in: query
          schema:
            type: string
            format: date-time
          description: "Fetches a list of income transactions for a specific portal. You can filter results by date range and pagination."
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: "Fetches a list of income transactions for a specific portal. You can filter results by date range and pagination."
        - name: cursor
          in: query
          schema:
            type: string
          description: "Fetches a list of income transactions for a specific portal. You can filter results by date range and pagination."
      responses:
        "200":
          description: "List of income transactions retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeTransactions"
        "403":
          description: "Access forbidden"
        "401":
          description: "Authentication required"

  "/s2s/portals/{portalId}/invoices":
    get:
      summary: "Get invoices"
      description: "Retrieve a list of invoices for a specified portal. You can use filters to get invoices finalized after a certain date."
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
          description: "The unique identifier for the portal to fetch invoices for."
        - name: finalizedAfter
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: "Retrieve a list of invoices for a specified portal. You can use filters to get invoices finalized after a certain date."
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: "Retrieve a list of invoices for a specified portal. You can use filters to get invoices finalized after a certain date."
        - name: cursor
          in: query
          schema:
            type: string
          description: "Retrieve a list of invoices for a specified portal. You can use filters to get invoices finalized after a certain date."
      responses:
        "200":
          description: "List of invoices retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
        "403":
          description: "Access forbidden"
        "401":
          description: "Authentication required"


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: PAT

  schemas:
    Advertiser:
      required:
        - id
      type: object
      properties:
          id:
              type: string
              description: "The unique identifier for the advertiser."
      additionalProperties: false
    Contract:
      required:
        - number
        - periodStartDay
        - signedAt
        - timezone
      type: object
      properties:
          number:
              maxLength: 50
              minLength: 1
              type: string
              description: "Contract number."
          periodStartDay:
              type: integer
              format: int64
              description: "The day of the month when the billing period starts."
          signedAt:
              type: string
              description: "The date when the contract was signed."
          timezone:
              type: string
              description: "Billing period timezone"
      additionalProperties: false
    IncomeTransaction:
      required:
        - advertiserId
        - amount
        - details
        - timestamp
        - transactionId
      type: object
      properties:
          advertiserId:
              type: string
              description: "The unique identifier for the advertiser."
          amount:
              type: number
              format: double
              description: "The amount involved in the transaction."
          details:
              type: string
              description: "Additional details about the transaction."
          timestamp:
              type: string
              format: date-time
              description: "The date and time when the transaction occurred."
          transactionId:
              type: string
              description: "The unique identifier for the transaction."
      additionalProperties: false
    IncomeTransactions:
      required:
        - items
      type: object
      properties:
          items:
              type: array
              items:
                $ref: "#/components/schemas/IncomeTransaction"
              description: "A list of income transactions."
          nextCursor:
              type: string
              description: "A cursor for paginating through the list of transactions."
      additionalProperties: false
    Invoice:
      required:
        - advertiserOrganizationName
        - advertiserOrganizationTin
        - contractNumber
        - contractSignedAt
        - details
        - finalizedAt
        - number
        - period
        - serviceType
        - sum
      type: object
      properties:
          advertiserOrganizationName:
              type: string
              description: "The name of the advertiser's organization."
          advertiserOrganizationTin:
              type: string
              description: "The Tax Identification Number (TIN) of the advertiser's organization."
          contractNumber:
              type: string
              description: "Contract number"
          contractSignedAt:
              type: string
              description: "The date when the contract was signed."
          details:
              type: array
              items:
                $ref: "#/components/schemas/ServiceDetails"
              description: "A list of detailed services covered by the invoice."
          finalizedAt:
              type: string
              format: date-time
              description: "The date and time when the invoice was finalized."
          number:
              type: integer
              format: int64
              description: "The unique number of the invoice."
          period:
              $ref: "#/components/schemas/InvoicePeriod"
              description: "The period covered by the invoice."
          serviceType:
              $ref: "#/components/schemas/ServiceType"
              description: "The type of service provided."
          sum:
              type: number
              format: double
              description: "The total amount to be paid for the invoice."
      additionalProperties: false
    InvoicePeriod:
      required:
        - endAt
        - startAt
      type: object
      properties:
          endAt:
              type: string
              description: "The end date of the period covered by the invoice."
          startAt:
              type: string
              description: "The start date of the period covered by the invoice."
      additionalProperties: false
    Invoices:
      required:
        - items
      type: object
      properties:
          items:
              type: array
              items:
                $ref: "#/components/schemas/Invoice"
              description: "An array of invoice objects."
          nextCursor:
              type: string
              description: "A cursor for paginating through the list of invoices."
      additionalProperties: false
    Organization:
      required:
        - name
        - tin
      type: object
      properties:
          name:
              type: string
              description: "The name of the organization."
          tin:
              type: string
              description: "The Tax Identification Number (TIN) of the organization."
      additionalProperties: false
    Pair:
      required:
        - key
        - value
      type: object
      properties:
          key:
              type: string
              description: "The key for the service data entry."
          value:
              type: string
              description: "The value for the service data entry."
      additionalProperties: false
    PostAdvertisersBody:
      required:
        - contract
        - name
        - organization
        - ownerId
      type: object
      properties:
          contract:
              $ref: "#/components/schemas/Contract"
              description: "The contract details for the new advertiser."
          minBalance:
              type: number
              format: double
              description: "The minimum balance required for starting new advertisements."
          name:
              type: string
              description: "The name of the advertiser."
          organization:
              $ref: "#/components/schemas/Organization"
              description: "The organization details for the new advertiser."
          ownerId:
              type: string
              description: "The unique identifier of the user who owns the advertiser account."
      additionalProperties: false
    PostIncomeTransactionsBody:
      required:
        - advertiserId
        - amount
        - details
        - transactionId
      type: object
      properties:
          advertiserId:
              type: string
              description: "The unique identifier for the advertiser involved in the transaction."
          amount:
              type: number
              format: double
              description: "The amount of the income transaction."
          details:
              type: string
              description: "Additional details about the transaction."
          transactionId:
              type: string
              description: "The unique identifier for the transaction."
      additionalProperties: false
    PostRegisterOrdServiceAgreementBody:
      required:
        - contractNumber
        - contractSignedAt
        - isOwnBrand
        - legalName
        - ogrn
        - tin
      type: object
      properties:
          contractNumber:
              maxLength: 50
              minLength: 1
              type: string
              description: "Contract number"
          contractSignedAt:
              maxLength: 10
              minLength: 10
              type: string
              description: "The date when the contract was signed."
          isOwnBrand:
              type: boolean
              description: "Indicates whether the service is for the advertiser's own brand."
          legalName:
              maxLength: 200
              minLength: 1
              type: string
              description: "The legal name of the advertiser."
          ogrn:
              maxLength: 13
              minLength: 13
              type: string
              description: "The Primary State Registration Number (OGRN) of the advertiser."
          tin:
              maxLength: 10
              minLength: 10
              type: string
              description: "The Tax Identification Number (TIN) of the advertiser."
      additionalProperties: false
    ServiceDetails:
      required:
        - count
        - data
        - firstAt
        - lastAt
        - placement
        - purpose
        - sum
      type: object
      properties:
          count:
              type: integer
              format: int64
              description: "The number of services provided."
          data:
              type: array
              items:
                $ref: "#/components/schemas/Pair"
              description: "Additional data about the service."
          firstAt:
              type: string
              format: date-time
              description: "Date and time of the first service delivery event"
          lastAt:
              type: string
              format: date-time
              description: "Date and time of the last service delivery event"
          placement:
              type: string
              description: "The placement location for the service (e.g., Homepage, Sidebar)."
          purpose:
              type: string
              description: "The purpose of the service."
          sum:
              type: number
              format: double
              description: "The total amount for the service."
      additionalProperties: false
    ServiceType:
        enum:
          - Advertising
          - Other
        type: string

